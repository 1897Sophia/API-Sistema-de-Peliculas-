//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Proyecto_1_DataAccess
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class BDPeliculasEntities : DbContext
    {
        public BDPeliculasEntities()
            : base("name=BDPeliculasEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Comentarios> Comentarios { get; set; }
        public virtual DbSet<Criticos> Criticos { get; set; }
        public virtual DbSet<Criticos_Calificacion> Criticos_Calificacion { get; set; }
        public virtual DbSet<Involucrados> Involucrados { get; set; }
        public virtual DbSet<Involucrados_Info> Involucrados_Info { get; set; }
        public virtual DbSet<Peliculas> Peliculas { get; set; }
        public virtual DbSet<Roles> Roles { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<Usuarios> Usuarios { get; set; }
    
        public virtual ObjectResult<ObtenerCriticos_Result> ObtenerCriticos(string nombre)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObtenerCriticos_Result>("ObtenerCriticos", nombreParameter);
        }
    
        public virtual ObjectResult<ObtenerInvolucrados_Result> ObtenerInvolucrados(string nombre)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObtenerInvolucrados_Result>("ObtenerInvolucrados", nombreParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> SP_ActivarInactivarUsuario(Nullable<int> idUsuario, Nullable<bool> activar)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(int));
    
            var activarParameter = activar.HasValue ?
                new ObjectParameter("Activar", activar) :
                new ObjectParameter("Activar", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("SP_ActivarInactivarUsuario", idUsuarioParameter, activarParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual ObjectResult<SP_BuscarPeliculaPorNombre_Result> SP_BuscarPeliculaPorNombre(string nombrePelicula)
        {
            var nombrePeliculaParameter = nombrePelicula != null ?
                new ObjectParameter("NombrePelicula", nombrePelicula) :
                new ObjectParameter("NombrePelicula", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_BuscarPeliculaPorNombre_Result>("SP_BuscarPeliculaPorNombre", nombrePeliculaParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int SP_Mantenimiento_Comentarios(Nullable<int> idComentario, Nullable<int> idUsuario, Nullable<int> idPelicula, string comentarioTexto, Nullable<int> idComentarioPadre, Nullable<int> oP)
        {
            var idComentarioParameter = idComentario.HasValue ?
                new ObjectParameter("IdComentario", idComentario) :
                new ObjectParameter("IdComentario", typeof(int));
    
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(int));
    
            var idPeliculaParameter = idPelicula.HasValue ?
                new ObjectParameter("IdPelicula", idPelicula) :
                new ObjectParameter("IdPelicula", typeof(int));
    
            var comentarioTextoParameter = comentarioTexto != null ?
                new ObjectParameter("ComentarioTexto", comentarioTexto) :
                new ObjectParameter("ComentarioTexto", typeof(string));
    
            var idComentarioPadreParameter = idComentarioPadre.HasValue ?
                new ObjectParameter("IdComentarioPadre", idComentarioPadre) :
                new ObjectParameter("IdComentarioPadre", typeof(int));
    
            var oPParameter = oP.HasValue ?
                new ObjectParameter("OP", oP) :
                new ObjectParameter("OP", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Mantenimiento_Comentarios", idComentarioParameter, idUsuarioParameter, idPeliculaParameter, comentarioTextoParameter, idComentarioPadreParameter, oPParameter);
        }
    
        public virtual int SP_Mantenimiento_InfoInv(Nullable<int> idInvolucradoInfo, Nullable<int> idInvolucrado, Nullable<int> idRol, Nullable<int> idPelicula, Nullable<int> ordenAparicion, Nullable<int> oP)
        {
            var idInvolucradoInfoParameter = idInvolucradoInfo.HasValue ?
                new ObjectParameter("IdInvolucradoInfo", idInvolucradoInfo) :
                new ObjectParameter("IdInvolucradoInfo", typeof(int));
    
            var idInvolucradoParameter = idInvolucrado.HasValue ?
                new ObjectParameter("IdInvolucrado", idInvolucrado) :
                new ObjectParameter("IdInvolucrado", typeof(int));
    
            var idRolParameter = idRol.HasValue ?
                new ObjectParameter("IdRol", idRol) :
                new ObjectParameter("IdRol", typeof(int));
    
            var idPeliculaParameter = idPelicula.HasValue ?
                new ObjectParameter("IdPelicula", idPelicula) :
                new ObjectParameter("IdPelicula", typeof(int));
    
            var ordenAparicionParameter = ordenAparicion.HasValue ?
                new ObjectParameter("OrdenAparicion", ordenAparicion) :
                new ObjectParameter("OrdenAparicion", typeof(int));
    
            var oPParameter = oP.HasValue ?
                new ObjectParameter("OP", oP) :
                new ObjectParameter("OP", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Mantenimiento_InfoInv", idInvolucradoInfoParameter, idInvolucradoParameter, idRolParameter, idPeliculaParameter, ordenAparicionParameter, oPParameter);
        }
    
        public virtual int SP_Mantenimiento_Peliculas(Nullable<int> idPelicula, string nombre, string descripcion, string poster, Nullable<System.DateTime> fecha, Nullable<int> oP)
        {
            var idPeliculaParameter = idPelicula.HasValue ?
                new ObjectParameter("IdPelicula", idPelicula) :
                new ObjectParameter("IdPelicula", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var posterParameter = poster != null ?
                new ObjectParameter("Poster", poster) :
                new ObjectParameter("Poster", typeof(string));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            var oPParameter = oP.HasValue ?
                new ObjectParameter("OP", oP) :
                new ObjectParameter("OP", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Mantenimiento_Peliculas", idPeliculaParameter, nombreParameter, descripcionParameter, posterParameter, fechaParameter, oPParameter);
        }
    
        public virtual int SP_MantenimientoInvolucrados(Nullable<int> idInvolucrado, string nombre, string apellidos, string facebook, string twiter, string instagram, string otros, Nullable<int> oP)
        {
            var idInvolucradoParameter = idInvolucrado.HasValue ?
                new ObjectParameter("IdInvolucrado", idInvolucrado) :
                new ObjectParameter("IdInvolucrado", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidosParameter = apellidos != null ?
                new ObjectParameter("Apellidos", apellidos) :
                new ObjectParameter("Apellidos", typeof(string));
    
            var facebookParameter = facebook != null ?
                new ObjectParameter("Facebook", facebook) :
                new ObjectParameter("Facebook", typeof(string));
    
            var twiterParameter = twiter != null ?
                new ObjectParameter("Twiter", twiter) :
                new ObjectParameter("Twiter", typeof(string));
    
            var instagramParameter = instagram != null ?
                new ObjectParameter("Instagram", instagram) :
                new ObjectParameter("Instagram", typeof(string));
    
            var otrosParameter = otros != null ?
                new ObjectParameter("Otros", otros) :
                new ObjectParameter("Otros", typeof(string));
    
            var oPParameter = oP.HasValue ?
                new ObjectParameter("OP", oP) :
                new ObjectParameter("OP", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_MantenimientoInvolucrados", idInvolucradoParameter, nombreParameter, apellidosParameter, facebookParameter, twiterParameter, instagramParameter, otrosParameter, oPParameter);
        }
    
        public virtual int SP_MantenimientosCalificacion(Nullable<int> idCriticoCalificacion, Nullable<int> idCritico, Nullable<int> idPelicula, Nullable<int> calificacion, Nullable<int> oP)
        {
            var idCriticoCalificacionParameter = idCriticoCalificacion.HasValue ?
                new ObjectParameter("IdCriticoCalificacion", idCriticoCalificacion) :
                new ObjectParameter("IdCriticoCalificacion", typeof(int));
    
            var idCriticoParameter = idCritico.HasValue ?
                new ObjectParameter("IdCritico", idCritico) :
                new ObjectParameter("IdCritico", typeof(int));
    
            var idPeliculaParameter = idPelicula.HasValue ?
                new ObjectParameter("IdPelicula", idPelicula) :
                new ObjectParameter("IdPelicula", typeof(int));
    
            var calificacionParameter = calificacion.HasValue ?
                new ObjectParameter("Calificacion", calificacion) :
                new ObjectParameter("Calificacion", typeof(int));
    
            var oPParameter = oP.HasValue ?
                new ObjectParameter("OP", oP) :
                new ObjectParameter("OP", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_MantenimientosCalificacion", idCriticoCalificacionParameter, idCriticoParameter, idPeliculaParameter, calificacionParameter, oPParameter);
        }
    
        public virtual int SP_MantenimientosCriticos(Nullable<int> idCritico, string nombre, Nullable<int> oP)
        {
            var idCriticoParameter = idCritico.HasValue ?
                new ObjectParameter("IdCritico", idCritico) :
                new ObjectParameter("IdCritico", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var oPParameter = oP.HasValue ?
                new ObjectParameter("OP", oP) :
                new ObjectParameter("OP", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_MantenimientosCriticos", idCriticoParameter, nombreParameter, oPParameter);
        }
    
        public virtual int SP_MantenimientosRoles(Nullable<int> idRol, string nombre, Nullable<int> oP)
        {
            var idRolParameter = idRol.HasValue ?
                new ObjectParameter("IdRol", idRol) :
                new ObjectParameter("IdRol", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var oPParameter = oP.HasValue ?
                new ObjectParameter("OP", oP) :
                new ObjectParameter("OP", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_MantenimientosRoles", idRolParameter, nombreParameter, oPParameter);
        }
    
        public virtual int SP_MantenimientoUsuarios(Nullable<int> operacion, Nullable<int> idUsuario, string usuario, string clave, string nombre, string apellidos, string correo, Nullable<int> estado)
        {
            var operacionParameter = operacion.HasValue ?
                new ObjectParameter("Operacion", operacion) :
                new ObjectParameter("Operacion", typeof(int));
    
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(int));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var claveParameter = clave != null ?
                new ObjectParameter("Clave", clave) :
                new ObjectParameter("Clave", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidosParameter = apellidos != null ?
                new ObjectParameter("Apellidos", apellidos) :
                new ObjectParameter("Apellidos", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_MantenimientoUsuarios", operacionParameter, idUsuarioParameter, usuarioParameter, claveParameter, nombreParameter, apellidosParameter, correoParameter, estadoParameter);
        }
    
        public virtual ObjectResult<SP_ObtenerInformacionPeliculaPorID_Result> SP_ObtenerInformacionPeliculaPorID(Nullable<int> idPelicula)
        {
            var idPeliculaParameter = idPelicula.HasValue ?
                new ObjectParameter("IdPelicula", idPelicula) :
                new ObjectParameter("IdPelicula", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ObtenerInformacionPeliculaPorID_Result>("SP_ObtenerInformacionPeliculaPorID", idPeliculaParameter);
        }
    
        public virtual ObjectResult<SP_ObtenerInformacionPeliculaRecientes_Result> SP_ObtenerInformacionPeliculaRecientes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ObtenerInformacionPeliculaRecientes_Result>("SP_ObtenerInformacionPeliculaRecientes");
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<Nullable<bool>> SP_VerificarUsuario(string usuario, string clave)
        {
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var claveParameter = clave != null ?
                new ObjectParameter("Clave", clave) :
                new ObjectParameter("Clave", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("SP_VerificarUsuario", usuarioParameter, claveParameter);
        }
    }
}
